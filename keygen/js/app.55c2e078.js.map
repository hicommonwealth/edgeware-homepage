{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/app.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","jquery__WEBPACK_IMPORTED_MODULE_2__","_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__","_polkadot_util__WEBPACK_IMPORTED_MODULE_4__","_polkadot_keyring__WEBPACK_IMPORTED_MODULE_5__","_polkadot_keyring__WEBPACK_IMPORTED_MODULE_5___default","_polkadot_keyring_pair__WEBPACK_IMPORTED_MODULE_6__","_polkadot_keyring_pair__WEBPACK_IMPORTED_MODULE_6___default","$","click","e","phrase","mnemonicGenerate","testnetKeyringPair","Keyring","type","addFromMnemonic","mainnetKeyringPair","ss58Format","show","text","u8aToHex","publicKey","address","publickey","val","keyring","addFromAddress","getPublicKeys","alert","testnetAddress","mainnetAddress","testnetKeyring","createPair","toSS58","encodeAddress","hexToU8a","mainnetKeyring"],"mappings":"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","file":"js/app.55c2e078.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([157,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import 'normalize.css';\nimport 'styles.css';\n\nimport * as $ from 'jquery';\nimport { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';\nimport { u8aToHex, hexToU8a } from '@polkadot/util';\nimport Keyring from '@polkadot/keyring';\nimport createPair from '@polkadot/keyring/pair';\n\n\n$('.generate-keypair').click((e) => {\n  const phrase = mnemonicGenerate();\n  const testnetKeyring = new Keyring({ type: 'sr25519' });\n  const testnetKeyringPair = testnetKeyring.addFromMnemonic(phrase);\n  const mainnetKeyring = new Keyring({ type: 'sr25519', ss58Format: 7 });\n  const mainnetKeyringPair = mainnetKeyring.addFromMnemonic(phrase);\n\n  $('.generated-account').show();\n  $('.generated-phrase').text(phrase);\n  $('.generated-publickey').text('' + u8aToHex(testnetKeyringPair.publicKey));\n  $('.generated-testnet-ss58').text(testnetKeyringPair.address);\n  $('.generated-mainnet-ss58').text(mainnetKeyringPair.address);\n});\n\n$('.ss58-convert').click((e) => {\n  let publickey;\n  const address = '' + $('.ss58-address').val();\n  const keyring = new Keyring();\n  try {\n    keyring.addFromAddress(address);\n    publickey = '' + u8aToHex(keyring.getPublicKeys()[0]);\n  } catch (e) {\n    alert('Invalid address!');\n    return;\n  }\n\n  $('.converted-account').show();\n  $('.converted-address').text(address);\n  $('.converted-publickey').text(publickey);\n});\n\n$('.pk-convert').click((e) => {\n  let testnetAddress;\n  let mainnetAddress;\n  const publickey = '' + $('.pk-publickey').val();\n  try {\n    const testnetKeyring = new Keyring({ type: 'sr25519' });\n    const testnetPair = createPair({ toSS58: testnetKeyring.encodeAddress, type: 'sr25519' }, { publicKey: hexToU8a(publickey) });\n    testnetAddress = testnetPair.address;\n    const mainnetKeyring = new Keyring({ type: 'sr25519', ss58Format: 7 });\n    const mainnetPair = createPair({ toSS58: mainnetKeyring.encodeAddress, type: 'sr25519' }, { publicKey: hexToU8a(publickey) });\n    mainnetAddress = mainnetPair.address;\n  } catch (e) {\n    alert('Invalid public key!');\n    return;\n  }\n  $('.pk-converted-account').show();\n  $('.pk-converted-publickey').text(publickey);\n  $('.pk-converted-testnet-address').text(testnetAddress);\n  $('.pk-converted-mainnet-address').text(mainnetAddress);\n});\n"],"sourceRoot":""}